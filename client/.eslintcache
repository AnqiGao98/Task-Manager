[{"/Users/angel/Documents/projects/Trello/client/src/index.js":"1","/Users/angel/Documents/projects/Trello/client/src/Routes.js":"2","/Users/angel/Documents/projects/Trello/client/src/App.js":"3","/Users/angel/Documents/projects/Trello/client/src/containers/Login.js":"4","/Users/angel/Documents/projects/Trello/client/src/actions/auth.js":"5","/Users/angel/Documents/projects/Trello/client/src/actions/type.js":"6","/Users/angel/Documents/projects/Trello/client/src/store.js":"7","/Users/angel/Documents/projects/Trello/client/src/reducers/index.js":"8","/Users/angel/Documents/projects/Trello/client/src/reducers/auth.js":"9","/Users/angel/Documents/projects/Trello/client/src/containers/NotFound.js":"10","/Users/angel/Documents/projects/Trello/client/src/utils/setAuthToken.js":"11","/Users/angel/Documents/projects/Trello/client/src/containers/SignUp.js":"12","/Users/angel/Documents/projects/Trello/client/src/actions/alert.js":"13","/Users/angel/Documents/projects/Trello/client/src/containers/Alert.js":"14","/Users/angel/Documents/projects/Trello/client/src/reducers/alert.js":"15","/Users/angel/Documents/projects/Trello/client/src/containers/Board.js":"16","/Users/angel/Documents/projects/Trello/client/src/containers/List.js":"17","/Users/angel/Documents/projects/Trello/client/src/actions/board.js":"18","/Users/angel/Documents/projects/Trello/client/src/containers/NavBar.js":"19","/Users/angel/Documents/projects/Trello/client/src/containers/PrivateRoute.js":"20","/Users/angel/Documents/projects/Trello/client/src/reducers/board.js":"21","/Users/angel/Documents/projects/Trello/client/src/containers/Spinner.js":"22","/Users/angel/Documents/projects/Trello/client/src/containers/NewList.js":"23","/Users/angel/Documents/projects/Trello/client/src/containers/BoardTitle.js":"24","/Users/angel/Documents/projects/Trello/client/src/actions/list.js":"25","/Users/angel/Documents/projects/Trello/client/src/containers/NewTask.js":"26","/Users/angel/Documents/projects/Trello/client/src/actions/task.js":"27","/Users/angel/Documents/projects/Trello/client/src/containers/Task.js":"28"},{"size":219,"mtime":1613707687101,"results":"29","hashOfConfig":"30"},{"size":753,"mtime":1612640491734,"results":"31","hashOfConfig":"30"},{"size":735,"mtime":1613708006486,"results":"32","hashOfConfig":"30"},{"size":1784,"mtime":1612641348783,"results":"33","hashOfConfig":"30"},{"size":1974,"mtime":1614053842111,"results":"34","hashOfConfig":"30"},{"size":821,"mtime":1614830490409,"results":"35","hashOfConfig":"30"},{"size":851,"mtime":1611549472527,"results":"36","hashOfConfig":"30"},{"size":190,"mtime":1612578565301,"results":"37","hashOfConfig":"30"},{"size":994,"mtime":1612740578187,"results":"38","hashOfConfig":"30"},{"size":207,"mtime":1606690792374,"results":"39","hashOfConfig":"30"},{"size":241,"mtime":1609128120675,"results":"40","hashOfConfig":"30"},{"size":2144,"mtime":1611634867709,"results":"41","hashOfConfig":"30"},{"size":343,"mtime":1611718364901,"results":"42","hashOfConfig":"30"},{"size":476,"mtime":1611634441826,"results":"43","hashOfConfig":"30"},{"size":411,"mtime":1611629102281,"results":"44","hashOfConfig":"30"},{"size":2255,"mtime":1615348573218,"results":"45","hashOfConfig":"30"},{"size":2223,"mtime":1615352585603,"results":"46","hashOfConfig":"30"},{"size":1931,"mtime":1615172791007,"results":"47","hashOfConfig":"30"},{"size":1342,"mtime":1612639957396,"results":"48","hashOfConfig":"30"},{"size":631,"mtime":1612641082386,"results":"49","hashOfConfig":"30"},{"size":932,"mtime":1614830616946,"results":"50","hashOfConfig":"30"},{"size":258,"mtime":1613709632564,"results":"51","hashOfConfig":"30"},{"size":1131,"mtime":1615146201172,"results":"52","hashOfConfig":"30"},{"size":1391,"mtime":1614653524913,"results":"53","hashOfConfig":"30"},{"size":2832,"mtime":1614834959782,"results":"54","hashOfConfig":"30"},{"size":1599,"mtime":1615168724834,"results":"55","hashOfConfig":"30"},{"size":2179,"mtime":1615351364537,"results":"56","hashOfConfig":"30"},{"size":587,"mtime":1615265127248,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"4j2h11",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/angel/Documents/projects/Trello/client/src/index.js",[],["128","129"],"/Users/angel/Documents/projects/Trello/client/src/Routes.js",[],"/Users/angel/Documents/projects/Trello/client/src/App.js",["130","131","132"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport { connect } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { logout, loadUser } from './actions/auth';\nimport NavBar from './containers/NavBar';\nimport setAuthToken from './utils/setAuthToken';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <NavBar />\n        <Routes />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n",["133","134"],"/Users/angel/Documents/projects/Trello/client/src/containers/Login.js",["135","136"],"import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './styles/Login.css';\nimport { login } from './../actions/auth';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    login({ username, password });\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to='/'></Redirect>;\n  }\n\n  return (\n    <div className='Login'>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <Form.Group size='lg' controlId='formBasicUsername'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            autoFocus\n            type='text'\n            placeholder='Please Enter Username'\n            onChange={(e) => setUsername(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group size='lg' controlId='formBasicPassword'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your Password'\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button block size='lg' type='submit' disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","/Users/angel/Documents/projects/Trello/client/src/actions/auth.js",[],["137","138"],"/Users/angel/Documents/projects/Trello/client/src/actions/type.js",[],["139","140"],"/Users/angel/Documents/projects/Trello/client/src/store.js",[],"/Users/angel/Documents/projects/Trello/client/src/reducers/index.js",[],"/Users/angel/Documents/projects/Trello/client/src/reducers/auth.js",["141"],"import {\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOG_OUT,\n  SIGNUP_FAIL,\n  SIGNUP_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n} from '../actions/type';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case SIGNUP_FAIL:\n    case AUTH_ERROR:\n    case LOG_OUT:\n    case LOGIN_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/angel/Documents/projects/Trello/client/src/containers/NotFound.js",[],["142","143"],"/Users/angel/Documents/projects/Trello/client/src/utils/setAuthToken.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/SignUp.js",["144"],"import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport './styles/SignUp.css';\nimport { signup } from './../actions/auth';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst SignUp = ({ auth: { isAuthenticated }, signup }) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    signup({ username, email, password });\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to='/'></Redirect>;\n  }\n  return (\n    <div className='SignUp'>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <Form.Group size='lg' controlId='formBasicUsername'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            autoFocus\n            type='text'\n            placeholder='Please Enter Username'\n            onChange={(e) => setUsername(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group size='lg' controlId='formBasicEmail'>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type='text'\n            placeholder='Please Enter Email'\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group size='lg' controlId='formBasicPassword'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Set Your Password'\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button block size='lg' type='submit' disabled={!validateForm()}>\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { signup })(SignUp);\n","/Users/angel/Documents/projects/Trello/client/src/actions/alert.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/Alert.js",[],"/Users/angel/Documents/projects/Trello/client/src/reducers/alert.js",["145"],"//function take in a state and actions\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/type';\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n",["146","147"],"/Users/angel/Documents/projects/Trello/client/src/containers/Board.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/List.js",[],"/Users/angel/Documents/projects/Trello/client/src/actions/board.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/NavBar.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/PrivateRoute.js",[],"/Users/angel/Documents/projects/Trello/client/src/reducers/board.js",["148","149"],"import {\n  GET_BOARD,\n  CREATE_BOARD,\n  BOARD_ERROR,\n  RENAME_BOARD,\n  CLEAR_BOARD,\n  UPDATE_BOARD,\n  SORT_LIST,\n} from '../actions/type';\n\nconst initialState = {\n  board: null,\n  loading: true,\n  error: [],\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_BOARD:\n    case CREATE_BOARD:\n    case UPDATE_BOARD:\n      return {\n        ...state,\n        board: payload.board,\n        loading: false,\n      };\n    case SORT_LIST:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          Lists: payload,\n        },\n        loading: false,\n      };\n    case BOARD_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        board: null,\n      };\n    case CLEAR_BOARD:\n      return {\n        ...state,\n        loading: false,\n        board: null,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/angel/Documents/projects/Trello/client/src/containers/Spinner.js",["150"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/angel/Documents/projects/Trello/client/src/containers/NewList.js",[],"/Users/angel/Documents/projects/Trello/client/src/containers/BoardTitle.js",[],"/Users/angel/Documents/projects/Trello/client/src/actions/list.js",["151","152","153","154"],"import {\n  GET_LIST,\n  LIST_ERROR,\n  RENAME_LIST,\n  REMOVE_LIST,\n  ADD_LIST,\n  UPDATE_BOARD,\n  SORT_LIST,\n} from './type';\nimport { setAlert } from './alert';\n\nconst axios = require('axios');\n\nexport const createList = (boardId, listName) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify({ name: listName });\n  try {\n    const result = await axios.post(\n      `/api/board/${boardId}/lists`,\n      body,\n      config\n    );\n    dispatch({\n      type: UPDATE_BOARD,\n      payload: result.data,\n    });\n  } catch (error) {\n    dispatch(setAlert(error.response.data.message, 'danger'));\n    dispatch({\n      type: LIST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\nexport const deleteList = (boardId, listId) => async (dispatch) => {\n  //dispatch({ type: CLEAR_BOARD });\n  try {\n    console.log('get board');\n    const result = await axios.delete(`/api/board/${boardId}/list/${listId}`);\n    dispatch({\n      type: UPDATE_BOARD,\n      payload: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LIST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\nexport const renameList = (boardId, listId, name) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify({ name });\n  try {\n    const result = await axios.put(\n      `/api/board/${boardId}/list/${listId}/rename`,\n      body,\n      config\n    );\n    dispatch({\n      type: UPDATE_BOARD,\n      payload: result.data,\n    });\n  } catch (error) {\n    dispatch(setAlert(error.response.data.message, 'danger'));\n    dispatch({\n      type: LIST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\nexport const reorderList = (boardId, list, oldIndex, newIndex, lists) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify({ orderNum: newIndex });\n  try {\n    lists.splice(oldIndex, 1);\n    lists.splice(newIndex, 0, list);\n    //update all list's order\n    for (let i of lists) {\n      i.order = lists.indexOf(i) + 1;\n    }\n\n    dispatch({\n      type: SORT_LIST,\n      payload: lists,\n    });\n    await axios.put(\n      `/api/board/${boardId}/list/${list.id}/reorder`,\n      body,\n      config\n    );\n  } catch (error) {\n    dispatch(setAlert(error.response.data.message, 'danger'));\n    dispatch({\n      type: LIST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n","/Users/angel/Documents/projects/Trello/client/src/containers/NewTask.js",["155"],"/Users/angel/Documents/projects/Trello/client/src/actions/task.js",["156","157"],"/Users/angel/Documents/projects/Trello/client/src/containers/Task.js",["158","159","160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":17},{"ruleId":"167","severity":1,"message":"171","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":23},{"ruleId":"167","severity":1,"message":"172","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":16},{"ruleId":"163","replacedBy":"173"},{"ruleId":"165","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"175","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":14},{"ruleId":"167","severity":1,"message":"176","line":13,"column":9,"nodeType":"169","messageId":"170","endLine":13,"endColumn":16},{"ruleId":"163","replacedBy":"177"},{"ruleId":"165","replacedBy":"178"},{"ruleId":"163","replacedBy":"179"},{"ruleId":"165","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":18,"column":1,"nodeType":"183","endLine":50,"endColumn":2},{"ruleId":"163","replacedBy":"184"},{"ruleId":"165","replacedBy":"185"},{"ruleId":"167","severity":1,"message":"176","line":14,"column":9,"nodeType":"169","messageId":"170","endLine":14,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":5,"column":1,"nodeType":"183","endLine":15,"endColumn":2},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"167","severity":1,"message":"188","line":5,"column":3,"nodeType":"169","messageId":"170","endLine":5,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":17,"column":1,"nodeType":"183","endLine":53,"endColumn":2},{"ruleId":"181","severity":1,"message":"189","line":4,"column":1,"nodeType":"183","endLine":12,"endColumn":3},{"ruleId":"167","severity":1,"message":"190","line":2,"column":3,"nodeType":"169","messageId":"170","endLine":2,"endColumn":11},{"ruleId":"167","severity":1,"message":"191","line":4,"column":3,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"192","line":5,"column":3,"nodeType":"169","messageId":"170","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"193","line":6,"column":3,"nodeType":"169","messageId":"170","endLine":6,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":47,"column":9,"nodeType":"196","endLine":47,"endColumn":43},{"ruleId":"197","severity":1,"message":"198","line":51,"column":49,"nodeType":"199","messageId":"200","endLine":51,"endColumn":51},{"ruleId":"197","severity":1,"message":"198","line":52,"column":47,"nodeType":"199","messageId":"200","endLine":52,"endColumn":49},{"ruleId":"167","severity":1,"message":"201","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"202","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"203","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":20},{"ruleId":"167","severity":1,"message":"204","line":6,"column":22,"nodeType":"169","messageId":"170","endLine":6,"endColumn":32},{"ruleId":"167","severity":1,"message":"205","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":19},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'LinkContainer' is defined but never used.","'logout' is defined but never used.",["206"],["207"],"'Link' is defined but never used.","'history' is assigned a value but never used.",["206"],["207"],["206"],["207"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["206"],["207"],["206"],["207"],"'RENAME_BOARD' is defined but never used.","Assign arrow function to a variable before exporting as module default","'GET_LIST' is defined but never used.","'RENAME_LIST' is defined but never used.","'REMOVE_LIST' is defined but never used.","'ADD_LIST' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Button' is defined but never used.","'deleteList' is defined but never used.","'renameList' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation"]